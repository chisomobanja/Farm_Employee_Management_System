services:
  db:
    image: postgres:15
    container_name: farm_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: farm_management
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./Revised_Farm_management_system
    container_name: farm_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/farm_management
      JWT_SECRET: e756ad3ba90bcf338219c54763ef7cc77a32796acca997e0f1daa7bd63faadde66601b913aca0fea5eb784a832163a83bd09a64eac53c88eb526635b1f8a8793
      NODE_ENV: development
      PORT: 5000
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ./farm-management-frontend
      dockerfile: Dockerfile
    container_name: farm_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./farm-management-frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:5000

volumes:
  pgdata:
